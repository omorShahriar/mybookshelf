{"version":3,"sources":["BooksAPI.js","components/Book.js","components/BookShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","Book","state","selectedShelf","_this","props","handleChange","e","setState","target","value","changeShelf","react_default","a","createElement","className","style","width","height","backgroundImage","this","imageLinks","thumbnail","onChange","disabled","title","authors","React","Component","BookShelf","_ref","heading","books","map","components_Book","key","BooksApp","showSearchPage","loading","filterBook","length","filter","info","b","BooksAPI","_this2","data","_this3","components_BookShelf","onClick","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f00c14c.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nclass Book extends React.Component  {\r\n  state = {\r\n    selectedShelf: this.props.book.shelf\r\n  } \r\n  handleChange = (e) => {\r\n    this.setState({selectedShelf:e.target.value},() => {\r\n      this.props.changeShelf({shelf:this.state.selectedShelf,book:this.props.book})\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <li>\r\n            <div className=\"book\"> \r\n              <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${this.props.book.imageLinks.thumbnail})`  }}></div>\r\n                <div className=\"book-shelf-changer\">\r\n                  <select value={this.state.selectedShelf} onChange={this.handleChange}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"book-title\">{this.props.book.title}</div>\r\n              <div className=\"book-authors\">{this.props.book.authors}</div>\r\n            </div>\r\n       </li>\r\n  )\r\n  }\r\n    \r\n}\r\n\r\nexport default Book","import React from 'react'\r\nimport Book from './Book'\r\nconst BookShelf = ({heading,books,changeShelf}) => {\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{heading}</h2>\r\n            <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {books.map((book) => <Book key={book.id} book={book} changeShelf={changeShelf} /> )}\r\n          </ol>\r\n        </div>\r\n        </div>\r\n    )\r\n        \r\n    \r\n}\r\n\r\nexport default BookShelf","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport BookShelf from './components/BookShelf'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    showSearchPage: false,\r\n    loading:true\r\n  }\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((res) => this.setState({books: res,loading:false}) )\r\n  }\r\n\r\n  filterBook = (shelf) => {\r\n    if(this.state.books.length) {\r\n      return this.state.books.filter((book) => book.shelf === shelf )\r\n    }\r\n  }\r\n  changeShelf = (info) => {\r\n    const {shelf,book} = info\r\n    this.setState(state => {\r\n      return {\r\n        ...state,\r\n        books: state.books.map(b => b.id === book.id ? ({...b,shelf}) : (b)  )\r\n      }\r\n    },() =>  BooksAPI.update(book,shelf)) \r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        {this.state.loading ? (\r\n          <h1>Loading</h1>\r\n        ) : (\r\n          \r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <BookShelf heading=\"Currently Reading\" books={this.filterBook('currentlyReading')} changeShelf={this.changeShelf}/> \r\n                <BookShelf heading=\"Want To Read\" books={this.filterBook('wantToRead')} changeShelf={this.changeShelf}/>  \r\n                <BookShelf heading=\"Read\" books={this.filterBook('read')} changeShelf={this.changeShelf}/>   \r\n              \r\n            </div>\r\n            <div className=\"open-search\">\r\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}